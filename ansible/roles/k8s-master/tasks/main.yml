---
- name: Pull Docker images
  become: yes
  command: "kubeadm config images pull"
  tags:
    - k8s

- name: Ensure kubeadm initialization
  become: yes
  command: "kubeadm init --pod-network-cidr=172.43.0.0/16 --apiserver-advertise-address=192.168.1.10"
  tags:
    - k8s

- name: Copy dashboard rbac config
  become: yes
  copy:
    content: |
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: admin-user
        namespace: kube-system
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: admin-user
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: admin-user
        namespace: kube-system
    dest: /var/tmp/dashboard-rbac-config.yaml
  tags:
    - k8s

- name: Copy tiller rbac config
  become: yes
  copy:
    content: |
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: tiller
        namespace: kube-system
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: tiller
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
        - kind: ServiceAccount
          name: tiller
          namespace: kube-system
    dest: /var/tmp/tiller-rbac-config.yaml
  tags:
    - k8s

- name: Copy StorageClass config
  become: yes
  copy:
    content: |
      kind: StorageClass
      apiVersion: storage.k8s.io/v1
      metadata:
        name: standard
      provisioner: kubernetes.io/no-provisioner
      volumeBindingMode: WaitForFirstConsumer
    dest: /var/tmp/storageclass-config.yaml
  tags:
    - k8s

- name: Copy config to /Vagrant for other VMs
  become: yes
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /vagrant/admin.conf
    owner: vagrant
    group: vagrant
    mode: 0600
  tags:
    - k8s

- name: Copy config to home directory
  become: yes
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/admin.conf
    owner: vagrant
    group: vagrant
    mode: 0600
  tags:
    - k8s

- name: Update Environment
  become: yes
  lineinfile:
    path: /home/vagrant/.bashrc
    regexp: '^export KUBECONFIG='
    line: 'export KUBECONFIG=/home/vagrant/admin.conf'
    state: present
  tags:
    - k8s

- name: Ensure Calico network file
  become: yes
  get_url:
    url: https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml
    dest: /var/tmp/calico.yaml
    mode: 0444
  tags:
    - k8s

- name: Ensure Calico RBAC file
  become: yes
  get_url:
    url: https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml
    dest: /var/tmp/rbac-kdd.yaml
    mode: 0444
  tags:
    - k8s

- name: Ensure Calico CIDR
  become: yes
  replace:
    path: /var/tmp/calico.yaml
    regexp: '192.168.0.0\/16'
    replace: '172.43.0.0/16'
    backup: yes
  tags:
    - k8s

- name: Ensure Network Start Scripts
  become: yes
  copy:
    src: files/{{ item }}
    dest: /usr/local/bin/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items:
    - "start-calico"
  tags:
    - k8s

- name: Ensure Utility Scripts
  become: yes
  copy:
    src: files/{{ item }}
    dest: /usr/local/bin/{{ item }}
    owner: root
    group: root
    mode: 0755
  with_items:
    - "dashboard-token"
    - "kubeadm-hash"
    - "kubeadm-token"
    - "taint-nodes"
    - "start-tiller"
    - "create-standard-storageclass"
    - "create-join-script"
  tags:
    - k8s

- name: Ensure Kube directory
  become: yes
  file:
    path: /home/vagrant/.kube
    state: directory
  tags:
    - k8s

- name: Copy config to Kube directory
  become: yes
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    owner: vagrant
    group: vagrant
    mode: 0600
  tags:
    - k8s

- name: List Kubernetes nodes
  become: yes
  command: "kubectl --kubeconfig=/home/vagrant/admin.conf get nodes"
  register: nodes
  tags:
    - k8s
- debug: var=nodes.stdout_lines

- name: Ensure dashboard file
  become: yes
  get_url:
    url: https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
    dest: /var/tmp/kubernetes-dashboard.yaml
    mode: 0444
  tags:
    - k8s

- name: Install dashboard rbac
  become: yes
  command: "kubectl --kubeconfig=/home/vagrant/admin.conf apply -f /var/tmp/dashboard-rbac-config.yaml"
  tags:
    - k8s

- name: Install tiller rbac
  become: yes
  command: "kubectl --kubeconfig=/home/vagrant/admin.conf apply -f /var/tmp/tiller-rbac-config.yaml"
  tags:
    - k8s

- name: Install dashboard service
  become: yes
  command: "kubectl --kubeconfig=/home/vagrant/admin.conf apply -f /var/tmp/kubernetes-dashboard.yaml"
  tags:
    - k8s

- name: Ensure Helm files
  become: yes
  get_url:
    url: https://storage.googleapis.com/kubernetes-helm/helm-v2.12.1-linux-amd64.tar.gz
    dest: /var/tmp/helm.tar.gz
    mode: 0444
  tags:
    - k8s

- name: Create Helm directory
  become: yes
  file:
    path: /var/tmp/helm
    state: directory
  tags:
    - k8s

- name: Decompress Helm files
  become: yes
  unarchive:
    src: /var/tmp/helm.tar.gz
    dest: /var/tmp/helm
  tags:
    - k8s

- name: Install helm command
  become: yes
  command: "cp /var/tmp/helm/linux-amd64/helm /usr/local/bin"
  tags:
    - k8s

- name: Install tiller command
  become: yes
  command: "cp /var/tmp/helm/linux-amd64/tiller /usr/local/bin"
  tags:
    - k8s

- name: Ensure Metrics server files
  become: yes
  git:
    repo: 'https://github.com/kubernetes-incubator/metrics-server.git'
    dest: /var/tmp/metrics-server
  tags:
    - k8s

- name: List Metrics server directory
  become: yes
  command: "ls -al /var/tmp/metrics-server"
  register: lstmp
  tags:
    - k8s
- debug: var=lstmp.stdout_lines

- name: Modify Metrics server deployment
  become: yes
  blockinfile:
    dest: /var/tmp/metrics-server/deploy/1.8+/metrics-server-deployment.yaml
    insertafter: 'imagePullPolicy: Always'
    block: "        command: ['/metrics-server', '--kubelet-insecure-tls', '--kubelet-preferred-address-types=InternalIP']"
    backup: yes
  tags:
    - k8s

- name: Print Metrics server deployment
  become: yes
  command: "cat /var/tmp/metrics-server/deploy/1.8+/metrics-server-deployment.yaml"
  register: cat
  tags:
    - k8s
- debug: var=cat.stdout_lines

- name: Install Metrics server
  become: yes
  command: "kubectl --kubeconfig=/home/vagrant/admin.conf create -f /var/tmp/metrics-server/deploy/1.8+/"
  tags:
    - k8s

- name: Create join script
  become: yes
  command: "create-join-script"
  tags:
    - k8s

- name: Copy join script
  become: yes
  copy:
    src: /home/vagrant/join.sh
    dest: /vagrant/join.sh
    owner: vagrant
    group: vagrant
    mode: 0600
  tags:
    - k8s

- name: Create Docker Registry directory
  become: yes
  file:
    path: /var/tmp/docker-registry
    state: directory
  tags:
    - k8s
